import convertNumberToEmoji from '../../utils/convertNumberToEmoji'
import getMoneyWithSymbol from '../../utils/getMoneyWithSymbol'
import getCategoryText from '../../utils/getCategoryText'
import { PeriodicExpense } from '@prisma/client'
import { InlineKeyboard } from 'grammy'

type PeriodicExpenseList = {
  periodicExpenses: string
  keyboard: InlineKeyboard
}
type ListPeriodicExpenses = (periodicExpenses: PeriodicExpense[]) => PeriodicExpenseList

const listPeriodicExpenses: ListPeriodicExpenses = periodicExpenses => {
  let resultString = `–†–µ–≥—É–ª—è—Ä–Ω—ã–µ —Ç—Ä–∞—Ç—ã:\n`
  const keyboard = new InlineKeyboard()
  periodicExpenses.forEach((periodicExpense, i) => {
    resultString +=
      `${convertNumberToEmoji(i + 1)} ${periodicExpense.name}\n` +
      `üí∞ <b>–°—É–º–º–∞:</b> ${getMoneyWithSymbol(periodicExpense.currency, periodicExpense.sum)}\n` +
      `üè∑ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> ${periodicExpense.category ? getCategoryText(periodicExpense.category) : `<i>–ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</i>`}\n` +
      `üè∑ <b>–ü–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü: ‚ùå –ù–µ –æ–ø–ª–∞—á–µ–Ω–æ</b> \n` +
      `üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> ${periodicExpense.description ? periodicExpense.description : `<i>–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è</i>`}\n` +
      `üìÖ <b>–ü–µ—Ä–∏–æ–¥:</b> ${periodicExpense.periodDays} –¥–Ω–µ–π\n\n`

    keyboard.text(`${i + 1}`, `periodicExpense_${periodicExpense.id}`)
  })

  return {
    periodicExpenses: resultString,
    keyboard,
  }
}

export default listPeriodicExpenses
