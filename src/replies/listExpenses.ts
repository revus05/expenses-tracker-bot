import { Expense } from '@prisma/client'
import getMoneyWithSymbol from '../utils/getMoneyWithSymbol'
import getDateFormat from '../utils/getDateDayFormat'
import getCategoryText from '../utils/getCategoryText'
import convertNumberToEmoji from '../utils/convertNumberToEmoji'
import { InlineKeyboard } from 'grammy'

type ListExpenses = (expenses: Expense[], totalSum: string, skip: number) => List

type List = {
  expenses: string
  keyboard: InlineKeyboard
}

const listExpenses: ListExpenses = (expenses, totalSum, skip) => {
  let resultString = 'üìä –í–∞—à–∏ —Ç—Ä–∞—Ç—ã:\n\n'
  const keyboard = new InlineKeyboard()
  expenses.forEach((expense: Expense, i) => {
    resultString +=
      `${convertNumberToEmoji(i + 1)} <b>–¢—Ä–∞—Ç–∞</b>\n` +
      `üí∞ <b>–°—É–º–º–∞:</b> ${getMoneyWithSymbol(expense.currency, expense.sum)}\n` +
      `üè∑ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> ${expense.category ? getCategoryText(expense.category) : `<i>–ù–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</i>`}\n` +
      `üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> ${expense.description ? expense.description : `<i>–ù–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è</i>`}\n` +
      `üìÖ <b>–î–∞—Ç–∞:</b> ${getDateFormat(expense.createdAt)}\n\n`

    keyboard.text(`${i + 1}`, `expense_${expense.id}`)
  })

  resultString += `<b>–ò—Ç–æ–≥–æ–≤–∞—è —Å—É–º–º–∞ –∑–∞ –º–µ—Å—è—Ü:</b> ${totalSum}`
  keyboard.row()

  return {
    expenses: resultString,
    keyboard,
  }
}

export default listExpenses
